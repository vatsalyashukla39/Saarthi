/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.example.entities.Train;
import org.example.entities.User;
import org.example.services.UserBookingService;
import org.example.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;

public class App {
    public String getGreeting() {
        return "Running Train Booking System";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        Scanner sc =new Scanner(System.in);
        int option=0;
        UserBookingService userBookingService;
        try{
            userBookingService=new UserBookingService();
        }catch (IOException ex){
            System.out.println("There is something wrong"+ex.getMessage());
            return;
        }
        System.out.println("*Welcome to Train Booking System*");
        while(option!=7){
            System.out.println("Choose one of the following options");
            System.out.println("1. Sign up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Booking List");
            System.out.println("4. Search Trains");
            System.out.println("5. Book Ticket");
            System.out.println("6. Cancel Booking");
            System.out.println("7. Exit the application");
            System.out.println("Enter your choice");
            option=sc.nextInt();
            switch (option){
                case 1:
                    System.out.println("Enter the username to signup");
                    String nameToSignUp=sc.next();
                    System.out.println("Enter the password to signup");
                    String passwordToSignUp=sc.next();
                    System.out.println("Enter the confirm password to signup");
                    String confirmPasswordToSignUp=sc.next();
                    if(passwordToSignUp.equals(confirmPasswordToSignUp)){
                        User userToSignUp=new User(nameToSignUp, passwordToSignUp, UserServiceUtil.hashPassword(passwordToSignUp), new ArrayList<>(), UUID.randomUUID().toString());
                        if(userBookingService.signUp(userToSignUp)){
                            System.out.println("You have successfully signed up");
                        }else{
                            System.out.println("Something went wrong while signing up please try again");
                        }
                    }break;
                case 2:
                    System.out.println("Enter the username to login");
                    String nameToLogin=sc.next();
                    System.out.println("Enter the password to login");
                    String passwordToLogin=sc.next();
                    User userToLogin=new User(nameToLogin, passwordToLogin, UserServiceUtil.hashPassword(passwordToLogin), new ArrayList<>(), UUID.randomUUID().toString());
                    try{
                        if(userBookingService.loginUser()){
                            System.out.println("You have successfully logged in");
                            userBookingService=new UserBookingService(userToLogin);
                        }else{
                            System.out.println("Invalid username or password");
                        }
                    }catch (IOException ex){
                        System.out.println("Something went wrong while logging in please try again");
                        return;
                    }break;
                case 3:
                    System.out.println("Fetching Your Booking List");
                    userBookingService.fetchBookingList();break;
                case 4:
                    Train trainSelectedForBooking=null;
                    System.out.println("Enter the source station");
                    String sourceStation=sc.next();
                    System.out.println("Enter the destination station");
                    String destinationStation=sc.next();
                    List<Train> trains=userBookingService.getTrains(sourceStation,destinationStation);
                    if(trains!=null){
                        int index=1;
                        System.out.println("The following trains are available");
                        for(Train train:trains){
                            System.out.println(index+"Train id: " +train.getTrainId());
                            for (Map.Entry<String,String> entry: train.getStationTimes().entrySet()){
                                System.out.println("station: "+entry.getKey()+" time: "+entry.getValue());
                                index++;
                            }
                        }
                        System.out.println("Select a train to book by typing its index 1,2,3...");
                        trainSelectedForBooking=trains.get(sc.nextInt());
                    }else{
                        System.out.println("No trains available");
                    }break;
                case 5:
//                    if(trainSelectedForBooking==null){
//                        System.out.println("Please select a train first by using option 4");
//                        break;
//                    }
//                    else {
//
//                    }
                case 6:
                    System.out.println("Enter Ticket Id");
                    userBookingService.cancelBooking(sc.next());break;






            }
        }
        sc.close();
        System.out.println("Thank you for using our service");
    }
}
